<launch>

  <arg name="gui" default="true" />
  <arg name="device" default="-1" />
  <arg name="video_device" default="/dev/video0" />
  <!-- <arg name="input_image" default="/usb_cam/image_raw" /> -->
  <arg name="input_image" default="tile_image_2x1/output" />
  <arg name="split_input_image" default="input_image" />

  <param name="/use_sim_time" value="true" />
  <!-- <node name="usb_cam" -->
  <!--       pkg="usb_cam" type="usb_cam_node" -->
  <!--       output="screen" clear_params="true" > -->
  <!--   <rosparam subst_value="true" > -->
  <!--     video_device: $(arg video_device) -->
  <!--   </rosparam> -->
  <!-- </node> -->

  <node name="rosbag_play"
        pkg="rosbag" type="play"
        required="true"
        args="$(find jsk_teaching_object)/sample/data/2023-03-09-18-49-40-image-compressed.bag --clock --loop">
  </node>

  <node name="republish"
        pkg="image_transport" type="republish"
        args="compressed raw">
    <remap from="in" to="/tile_image_2x1/output" />
    <remap from="out" to="/tile_image_2x1/output" />
  </node>

  <node name="split_image"
        pkg="jsk_teaching_object" type="split_image.py"
        output="screen">
    <remap from="~input" to="$(arg input_image)" />
    <remap from="/split_image/output/vertical00/horizontal00" to="/input_image" />
    <rosparam>
      vertical_parts: 1
      horizontal_parts: 2
    </rosparam>
  </node>

  <node name="fg_node"
        pkg="fg_ros" type="fg_node.py"
        output="screen"
        clear_params="true"
        required="true">
    <remap from="~input" to="$(arg split_input_image)" />
    <rosparam subst_value="true">
      model_path: $(find fg_ros)/trained_data/yolo7/2023-03-09.pt
      score_thresh: 0.4
      nms_thresh: 0.45
      device: $(arg device)
      class_names: ['ba25', 'fan', 'others', 'rau']
    </rosparam>
  </node>

  <!-- <node name="edgetpu_object_detector" -->
  <!--       pkg="coral_usb" type="edgetpu_object_detector.py" -->
  <!--       output="screen" respawn="true"> -->
  <!--   <remap from="~input" to="$(arg split_input_image)" /> -->
  <!--   <rosparam subst_value="true" > -->
  <!--     model_file: $(find jsk_teaching_object)/trained_data/2023-03-10/output_tflite_graph_edgetpu.tflite -->
  <!--     label_file: $(find jsk_teaching_object)/trained_data/2023-03-10/labels.txt -->
  <!--     image_transport: raw -->
  <!--     device_id: 0 -->
  <!--   </rosparam> -->
  <!-- </node> -->

  <!-- <node name="draw_rects_for_tpu" -->
  <!--       pkg="jsk_teaching_object" type="draw_rects.py" -->
  <!--       output="screen" -->
  <!--       clear_params="true" > -->
  <!--   <remap from="~input" to="$(arg split_input_image)" /> -->
  <!--   <remap from="~input/rects" to="/edgetpu_object_detector/output/rects" /> -->
  <!--   <remap from="~input/class" to="/edgetpu_object_detector/output/class" /> -->
  <!--   <remap from="~output" to="/edgetpu" /> -->
  <!--   <rosparam subst_value="true"> -->
  <!--     font_path: $(find jsk_teaching_object)/font_data/NotoSansJP-Regular.otf -->
  <!--     use_classification_result: true -->
  <!--     label_size: 16 -->
  <!--   </rosparam> -->
  <!-- </node> -->

  <node name="label_image_decomposer_instance"
        pkg="jsk_teaching_object" type="label_image_decomposer.py"
        output="screen" clear_params="true" >
    <remap from="~input" to="/fg_node/output" />
    <remap from="~input/label" to="/fg_node/output/label_ins" />
    <remap from="~output/label_viz" to="~output/viz" />
    <rosparam subst_value="true" >
      approximate_sync: false
      use_label_array: false
      only_label: false
      queue_size: 30
      alpha: 0.5
    </rosparam>
  </node>

  <node name="draw_rects"
        pkg="jsk_teaching_object" type="draw_rects.py"
        output="screen"
        clear_params="true" >
    <remap from="~input" to="label_image_decomposer_instance/output/viz" />
    <remap from="~input/rects" to="fg_node/output/rects" />
    <remap from="~input/class" to="fg_node/output/class" />
    <remap from="~output" to="/yolo7" />
    <rosparam subst_value="true">
      font_path: $(find jsk_teaching_object)/font_data/NotoSansJP-Regular.otf
      use_classification_result: true
      label_size: 16
    </rosparam>
  </node>

  <node name="tile_image_2x1"
        pkg="jsk_teaching_object" type="tile_image.py"
        output="screen">
    <remap from="~output" to="~output_cpu" />
    <rosparam subst_value="true">
      input_topics: [$(arg split_input_image), /yolo7]
      shape: [1, 2]
      no_sync: true
      draw_topic_name: true
    </rosparam>
  </node>

  <group if="$(arg gui)" >
    <node name="image_view00"
          pkg="image_view" type="image_view">
      <remap from="image" to="tile_image_2x1/output_cpu" />
    </node>
  </group>

</launch>
