<launch>

  <arg name="gui" default="true" />
  <arg name="device" default="0" />
  <arg name="volume" default="1.0" />
  <!-- <arg name="video_device" default="/dev/hbvcam_5m_af_right" /> -->
  <arg name="video_device" default="/dev/video0" />
  <arg name="input_audio_device" default="plughw:0,0" />
  <arg name="output_audio_device" default="plughw:0,0" />
  <arg name="input_image" default="/usb_cam/image_raw" />
  <arg name="root_image_path" default="/etc/opt/teaching-object/2023-09-21" />
  <arg name="no_robot_mode" default="true" />

  <arg name="larm_hand_camera_index" default="0" />
  <arg name="rarm_hand_camera_index" default="0" />

  <arg name="camera_name" value="hand_camera" />
  <arg name="vendor" value="0x337b" />
  <arg name="product" value="0x090c" />
  <arg name="height" value="1200" />
  <arg name="width" value="1600" />
  <arg name="video_mode" value="mjpeg" />
  <arg name="frame_rate" value="15" />
  <arg name="brightness" value="0" />

  <node name="dynamic_tf_publisher"
        pkg="dynamic_tf_publisher" type="tf_publish.py"
        output="screen" clear_params="true" >
  </node>

  <node name="set_initial_tf"
        pkg="dynamic_tf_publisher" type="tf_set.py"
        args="-0.0 0.02 0.015 -0.5 -0.5 0.5 0.5 r_finger_upper_link r_finger_camera_link 10"
        output="screen" clear_params="true" >
  </node>

  <node name="usb_cam"
        pkg="usb_cam" type="usb_cam_node"
        output="screen" clear_params="true" >
    <rosparam subst_value="true" >
      video_device: $(arg video_device)
    </rosparam>
  </node>

  <!-- <group ns="usb_cam" > -->
  <!--   <node name="camera_driver" -->
  <!--         pkg="nodelet" type="nodelet" -->
  <!--         args="standalone libuvc_camera/driver" -->
  <!--         respawn="true" -->
  <!--         clear_params="true"> -->
  <!--     <param name="index" value="$(arg rarm_hand_camera_index)" /> -->
  <!--     <param name="frame_id" value="r_finger_camera_link" /> -->
  <!--     <param name="vendor" value="$(arg vendor)" /> -->
  <!--     <param name="product" value="$(arg product)" /> -->
  <!--     <param name="height" value="$(arg height)" /> -->
  <!--     <param name="width" value="$(arg width)" /> -->
  <!--     <param name="video_mode" value="$(arg video_mode)" /> -->
  <!--     <param name="frame_rate" value="$(arg frame_rate)" /> -->
  <!--     <param name="brightness" value="$(arg brightness)" /> -->
  <!--     <param name="time_method" value="start" /> -->
  <!--     <param name="auto_exposure" value="1" /> -->
  <!--     <param name="auto_white_balance" value="true" /> -->
  <!--     <param name="camera_info_url" value="file://$(find jsk_teaching_object)/config/r8/camera/right_hand_$(arg width)x$(arg height).yaml"/> -->
  <!--   </node> -->
  <!-- </group> -->

  <!-- <node name="remove_bg_node" -->
  <!--       pkg="jsk_teaching_object" type="remove_bg_node.py" -->
  <!--       output="screen" -->
  <!--       respawn="true" > -->
  <!--   <remap from="~input" to="$(arg input_image)" /> -->
  <!--   <rosparam subst_value="true"> -->
  <!--   </rosparam> -->
  <!-- </node> -->

  <node name="publish_text"
        pkg="jsk_teaching_object" type="publish_text.py"
        output="screen"
        respawn="true" >
    <rosparam subst_value="true">
    </rosparam>
  </node>

  <!-- <node name="register_object" -->
  <!--       pkg="jsk_teaching_object" type="register_object.py" > -->
  <!--   <remap from="~image" to="$(arg input_image)" /> -->
  <!--   <rosparam subst_value="true"> -->
  <!--     root_image_path: $(arg root_image_path) -->
  <!--   </rosparam> -->
  <!-- </node> -->

  <node name="show_image_publisher"
        pkg="jsk_teaching_object" type="show_image_publisher.py"
        clear_params="true"
        respawn="true" >
    <rosparam subst_value="true">
      root_image_path: $(arg root_image_path)
    </rosparam>
  </node>

  <include file="$(find jsk_teaching_object)/launch/speech_recognition.launch" >
    <arg name="device" value="$(arg input_audio_device)" />
    <arg name="output_audio_device" value="$(arg output_audio_device)" />
    <arg name="volume" value="$(arg volume)" />
  </include>

  <!-- object detection -->
  <node name="object_detection"
        pkg="jsk_teaching_object" type="object_detection.py"
        output="screen"
        clear_params="true"
        required="false">
    <remap from="~input" to="$(arg input_image)" />
    <rosparam subst_value="true">
      score_thresh: 0.4
      nms_thresh: 0.45
      device: $(arg device)
      root_image_path: "~/dataset/2023-09-21"
    </rosparam>
  </node>

  <node name="label_image_decomposer_instance"
        pkg="jsk_teaching_object" type="label_image_decomposer.py"
        output="screen" clear_params="true" >
    <remap from="~input" to="/fg_node/output" />
    <remap from="~input/label" to="/fg_node/output/label_ins" />
    <remap from="~output/label_viz" to="~output/viz" />
    <rosparam subst_value="true" >
      approximate_sync: false
      use_label_array: false
      only_label: false
      queue_size: 30
      alpha: 0.5
    </rosparam>
  </node>

  <node name="draw_rects"
        pkg="jsk_teaching_object" type="draw_rects.py"
        output="screen"
        clear_params="true" >
    <remap from="~input" to="label_image_decomposer_instance/output/viz" />
    <remap from="~input/rects" to="fg_node/output/rects" />
    <remap from="~input/class" to="fg_node/output/class" />
    <remap from="~output" to="/yolo7" />
    <rosparam subst_value="true">
      font_path: $(find jsk_teaching_object)/font_data/NotoSansJP-Regular.otf
      use_classification_result: true
      label_size: 64
      show_proba: true
    </rosparam>
  </node>

  <node name="tile_image_2x1"
        pkg="jsk_teaching_object" type="tile_image.py"
        output="screen">
    <remap from="~output" to="~output" />
    <rosparam subst_value="true">
      input_topics: [$(arg input_image), /yolo7]
      shape: [1, 2]
      no_sync: true
      draw_topic_name: true
    </rosparam>
  </node>

  <group unless="$(arg no_robot_mode)" >
    <node name="r8_5_look_server"
          pkg="jsk_teaching_object" type="r8_5_look.py"
          output="screen">
    </node>
  </group>

  <group if="$(arg gui)" >
    <node name="$(anon rviz)"
          pkg="rviz" type="rviz"
          args="-d $(find jsk_teaching_object)/launch/config/2023-09-20.rviz" >
    </node>
  </group>

</launch>
