<launch>
  <machine name="localhost" address="localhost" />

  <arg name="manager" default="k4a_pr2_decompress_nodelet_manager" />
  <arg name="launch_manager" default="true" />
  <arg name="machine" default="localhost" />

  <arg name="RGB_CAMERA_INFO" default="/k4a/rgb/camera_info" />
  <arg name="RGB_IMAGE" default="/k4a/rgb/image_rect_color" />
  <arg name="RGB_REMOTE_IMAGE" default="/k4a_remote/rgb/image_rect_color" />
  <arg name="RGB_REMOTE_HALF_IMAGE" default="/k4a_remote/rgb_half/image_rect_color" />
  <arg name="RGB_REMOTE_HALF_CAMERA_INFO" default="/k4a_remote/rgb_half/camera_info" />

  <arg name="DEPTH_CAMERA_INFO" default="/k4a/depth/camera_info" />
  <arg name="DEPTH_IMAGE" default="/k4a/depth/image_rect_raw"  />
  <arg name="DEPTH_REMOTE_IMAGE" default="/k4a_remote/depth/image_rect_raw" />
  <arg name="DEPTH_REMOTE_HALF_IMAGE" default="/k4a_remote/depth_half/image_rect_raw" />
  <arg name="DEPTH_REMOTE_HALF_CAMERA_INFO" default="/k4a_remote/depth_half/camera_info" />

  <arg name="DEPTH_TO_RGB_CAMERA_INFO" default="/k4a/depth_to_rgb/camera_info" />
  <arg name="DEPTH_TO_RGB_IMAGE" default="/k4a/depth_to_rgb/image_raw" />
  <arg name="DEPTH_TO_RGB_REMOTE_IMAGE" default="/k4a_remote/depth_to_rgb/image_raw" />
  <arg name="DEPTH_TO_RGB_REMOTE_HALF_IMAGE" default="/k4a_remote/depth_to_rgb_half/image_raw" />
  <arg name="DEPTH_TO_RGB_REMOTE_HALF_CAMERA_INFO" default="/k4a_remote/depth_to_rgb_half/camera_info" />

  <arg name="use_cloud" default="false" />

  <arg name="CLOUD" default="/k4a_remote/depth_half/points" />

  <group ns="k4a_remote">
    <node name="$(arg manager)" pkg="nodelet" type="nodelet" args="manager"
          machine="$(arg machine)" if="$(arg launch_manager)"
        output="screen" />

    <node name="rgb_decompress" pkg="image_transport" type="republish"
          args="compressed in:=$(arg RGB_IMAGE) out:=$(arg RGB_REMOTE_IMAGE)" />

    <!-- half point cloud -->
    <!-- resize for point cloud -->
    <node name="resize_rgb"
          pkg="nodelet" type="nodelet"
          args="standalone image_proc/resize" >
      <param name="scale_height" value="0.5" />
      <param name="scale_width" value="0.5" />
      <remap from="image" to="$(arg RGB_REMOTE_IMAGE)" />
      <remap from="camera_info" to="$(arg RGB_CAMERA_INFO)" />
      <remap from="~image" to="$(arg RGB_REMOTE_HALF_IMAGE)" />
      <remap from="~camera_info" to="$(arg RGB_REMOTE_HALF_CAMERA_INFO)" />
    </node>

    <group if="$(arg use_cloud)">
      <!-- decompress -->
      <node name="depth_to_rgb_decompress" pkg="image_transport" type="republish"
            args="compressedDepth in:=$(arg DEPTH_TO_RGB_IMAGE) out:=$(arg DEPTH_TO_RGB_REMOTE_IMAGE)" />
      <node name="depth_decompress" pkg="image_transport" type="republish"
            args="compressedDepth in:=$(arg DEPTH_IMAGE) out:=$(arg DEPTH_REMOTE_IMAGE)" />

      <!-- half point cloud -->
      <!-- resize for point cloud -->
      <node name="resize_depth_to_rgb"
            pkg="nodelet" type="nodelet"
            args="standalone image_proc/resize" >
        <param name="scale_height" value="0.5" />
        <param name="scale_width" value="0.5" />
        <remap from="image" to="$(arg DEPTH_TO_RGB_REMOTE_IMAGE)" />
        <remap from="camera_info" to="$(arg DEPTH_TO_RGB_CAMERA_INFO)" />
        <remap from="~image" to="$(arg DEPTH_TO_RGB_REMOTE_HALF_IMAGE)" />
        <remap from="~camera_info" to="$(arg DEPTH_TO_RGB_REMOTE_HALF_CAMERA_INFO)" />
      </node>

      <!-- half point cloud -->
      <!-- resize for point cloud -->
      <node name="resize_depth"
            pkg="nodelet" type="nodelet"
            args="standalone image_proc/resize" >
        <param name="interpolation" value="0" />
        <param name="scale_height" value="0.5" />
        <param name="scale_width" value="0.5" />
        <remap from="image" to="$(arg DEPTH_REMOTE_IMAGE)" />
        <remap from="camera_info" to="$(arg DEPTH_CAMERA_INFO)" />
        <remap from="~image" to="$(arg DEPTH_REMOTE_HALF_IMAGE)" />
        <remap from="~camera_info" to="$(arg DEPTH_REMOTE_HALF_CAMERA_INFO)" />
      </node>

      <!-- <!-\- make point cloud normar -\-> -->
      <!-- <node pkg="nodelet" type="nodelet" name="point_cloud_xyzrgb" -->
      <!--       args="load depth_image_proc/point_cloud_xyzrgb $(arg manager)" output="screen" > -->
      <!--   <remap from="rgb/camera_info" to="$(arg RGB_REMOTE_HALF_CAMERA_INFO)" /> -->
      <!--   <remap from="rgb/image_rect_color" to="$(arg RGB_REMOTE_HALF_IMAGE)" /> -->
      <!--   <!-\- <remap from="depth_registered/image_rect" to="$(arg DEPTH_REMOTE_HALF_IMAGE)" /> -\-> -->
      <!--   <!-\- <remap from="depth_registered/points" to="$(arg CLOUD)" /> -\-> -->
      <!--   <remap from="depth_registered/image_rect" to="$(arg DEPTH_TO_RGB_REMOTE_HALF_IMAGE)" /> -->
      <!--   <remap from="depth_registered/points" to="$(arg CLOUD)" /> -->
      <!--   <rosparam> -->
      <!--     queue_size: 100 -->
      <!--   </rosparam> -->
      <!-- </node> -->

      <!-- half point cloud -->
      <!-- Depth-to-RGB registration and processing -->
      <arg name="depth_registration" default="true" doc="Hardware depth registration" />
      <arg name="num_worker_threads" default="4" doc="Worker threads for the nodelet manager" />
      <!-- Processing Modules -->
      <arg name="queue_size" default="100" />
      <arg name="respawn" default="false" />
      <arg name="rgb_processing"                  default="true"  />
      <arg name="debayer_processing"              default="false" />
      <arg name="ir_processing"                   default="true" />
      <arg name="depth_processing"                default="true" />
      <arg name="depth_registered_processing"     default="true" />
      <arg name="hw_registered_processing"        default="true" if="$(arg depth_registration)" />
      <arg name="sw_registered_processing"        default="false" if="$(arg depth_registration)" />
      <arg name="hw_registered_processing"        default="false" unless="$(arg depth_registration)" />
      <arg name="sw_registered_processing"        default="true" unless="$(arg depth_registration)" />

      <include if="$(arg depth_registered_processing)"
               file="$(find rgbd_launch)/launch/includes/depth_registered.launch.xml">
        <arg name="manager"                   value="$(arg manager)" />
        <arg name="rgb"                       value="rgb_half" />
        <arg name="depth"                     value="depth_half" />
        <arg name="depth_registered"          value="depth_to_rgb_half" />
        <arg name="depth_registered_filtered" value="depth_to_rgb_half" />
        <arg name="respawn"                   value="$(arg respawn)" />
        <arg name="sw_registered_processing"  value="true" />
        <arg name="hw_registered_processing"  value="false" />
        <!-- <arg name="queue_size"                value="$(arg queue_size)" /> -->
      </include>
    </group>
  </group>
</launch>
