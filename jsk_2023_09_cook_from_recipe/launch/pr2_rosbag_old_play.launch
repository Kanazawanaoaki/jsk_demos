<launch>
  <arg name="rosbag" />
  <arg name="manager" default="rosbag_play_nodelet_manager" />
  <arg name="launch_nodelet_manager" default="true" />
  <arg name="loop" default="true" />
  <arg name="gui" default="false" />
  <arg name="loop_flag" value="--loop" if="$(arg loop)" />
  <arg name="loop_flag" value="" unless="$(arg loop)" />

  <arg name="K4A_RGB_CAMERA_INFO" value="/k4a/rgb/camera_info" />
  <arg name="K4A_RGB_IMAGE" value="/k4a/rgb/image_rect_color" />
  <arg name="K4A_DEPTH_TO_RGB_CAMERA_INFO" value="/k4a/depth_to_rgb/camera_info" />
  <arg name="K4A_DEPTH_TO_RGB_IMAGE" value="/k4a/depth_to_rgb/image_raw" />
  <arg name="K4A_DEPTH_CAMERA_INFO" value="/k4a/depth/camera_info" />
  <arg name="K4A_DEPTH_IMAGE" value="/k4a/depth/image_rect_raw" />
  <arg name="RGB_CAMERA_INFO" value="/kinect_head/rgb/throttled/camera_info" />
  <arg name="RGB_IMAGE" value="/kinect_head/rgb/throttled/image_rect_color" />
  <arg name="QUAT_RGB_CAMERA_INFO" value="/kinect_head/rgb/quater/throttled/camera_info" />
  <arg name="QUAT_RGB_IMAGE" value="/kinect_head/rgb/quater/throttled/image_rect_color" />
  <arg name="DEPTH_CAMERA_INFO" value="/kinect_head/depth_registered/throttled/camera_info" />
  <arg name="DEPTH_IMAGE" value="/kinect_head/depth_registered/throttled/image_rect" />

  <param name="use_sim_time" value="true" />

  <arg name="depth_registration" default="true" doc="Hardware depth registration" />
  <arg name="num_worker_threads" default="4" doc="Worker threads for the nodelet manager" />
  <!-- Processing Modules -->
  <arg name="queue_size" default="100" />
  <arg name="respawn" default="false" />
  <arg name="rgb_processing"                  default="true"  />
  <arg name="debayer_processing"              default="false" />
  <arg name="ir_processing"                   default="true" />
  <arg name="depth_processing"                default="true" />
  <arg name="depth_registered_processing"     default="true" />
  <arg name="hw_registered_processing"        default="true" if="$(arg depth_registration)" />
  <arg name="sw_registered_processing"        default="false" if="$(arg depth_registration)" />
  <arg name="hw_registered_processing"        default="false" unless="$(arg depth_registration)" />
  <arg name="sw_registered_processing"        default="true" unless="$(arg depth_registration)" />

  <include file="$(find pr2_description)/robots/upload_pr2.launch">
    <arg name="KINECT1" value="true" />
    <arg name="KINECT2" value="false" />
  </include>
  <node pkg="nodelet" type="nodelet" name="$(arg manager)" args="manager" output="screen" />

  <!-- decompress -->
  <node name="k4a_rgb_decompress" pkg="image_transport" type="republish"
        args="compressed in:=$(arg K4A_RGB_IMAGE) raw out:=$(arg K4A_RGB_IMAGE)" />
  <node name="k4a_depth_to_rgb_decompress" pkg="image_transport" type="republish"
        args="compressed in:=$(arg K4A_DEPTH_TO_RGB_IMAGE) raw out:=$(arg K4A_DEPTH_TO_RGB_IMAGE)" />
  <node name="k4a_depth_decompress" pkg="image_transport" type="republish"
        args="compressedDepth in:=$(arg K4A_DEPTH_IMAGE) raw out:=$(arg K4A_DEPTH_IMAGE)" />
  <node name="rgb_decompress" pkg="image_transport" type="republish"
        args="compressed in:=$(arg RGB_IMAGE) raw out:=$(arg RGB_IMAGE)" />
  <node name="depth_decompress" pkg="image_transport" type="republish"
        args="compressedDepth in:=$(arg DEPTH_IMAGE) raw out:=$(arg DEPTH_IMAGE)" />
  <node pkg="nodelet" type="nodelet" name="point_cloud_xyzrgb"
        args="load depth_image_proc/point_cloud_xyzrgb $(arg manager)" output="screen" >
    <remap from="rgb/camera_info" to="$(arg RGB_CAMERA_INFO)" />
    <remap from="rgb/image_rect_color" to="$(arg RGB_IMAGE)" />
    <remap from="depth_registered/image_rect" to="$(arg DEPTH_IMAGE)" />
    <remap from="depth_registered/points" to="/kinect_head/depth_registered/throttled/points" />
    <rosparam>
      queue_size: 100
    </rosparam>
  </node>
  <node name="resize_rgb" pkg="nodelet" type="nodelet"
        args="load image_proc/resize $(arg manager)" output="screen">
    <remap from="image" to="$(arg RGB_IMAGE)" />
    <remap from="camera_info" to="$(arg RGB_CAMERA_INFO)" />
    <remap from="~image" to="$(arg QUAT_RGB_IMAGE)" />
    <remap from="~camera_info" to="$(arg QUAT_RGB_CAMERA_INFO)" />
    <rosparam>
      scale_width: 0.25
      scale_height: 0.25
    </rosparam>
  </node>
  <node name="resize_cloud" pkg="nodelet" type="nodelet"
        args="load jsk_pcl/ResizePointsPublisher $(arg manager)" output="screen">
    <remap from="~input" to="/kinect_head/depth_registered/throttled/points" />
    <remap from="~output" to="/kinect_head/depth_registered/quater/throttled/points" />
    <rosparam>
      step_x: 4
      step_y: 4
    </rosparam>
  </node>

  <!-- relay -->
  <node name="rgb_image_relay" pkg="topic_tools" type="relay"
        args="$(arg RGB_IMAGE) /kinect_head/rgb/image_rect_color" />
  <node name="rgb_info_relay" pkg="topic_tools" type="relay"
        args="$(arg RGB_CAMERA_INFO) /kinect_head/rgb/camera_info" />
  <node name="quat_rgb_image_relay" pkg="topic_tools" type="relay"
        args="$(arg QUAT_RGB_IMAGE) /kinect_head/rgb/quater/image_rect_color" />
  <node name="quat_rgb_info_relay" pkg="topic_tools" type="relay"
        args="$(arg QUAT_RGB_CAMERA_INFO) /kinect_head/rgb/quater/camera_info" />
  <node name="depth_image_relay" pkg="topic_tools" type="relay"
        args="$(arg DEPTH_IMAGE) /kinect_head/depth_registered/image_rect" />
  <node name="depth_info_relay" pkg="topic_tools" type="relay"
        args="$(arg DEPTH_CAMERA_INFO) /kinect_head/depth_registered/camera_info" />
  <node name="points_relay" pkg="topic_tools" type="relay"
        args="/kinect_head/depth_registered/throttled/points /kinect_head/depth_registered/points" />
  <node name="quat_points_relay" pkg="topic_tools" type="relay"
        args="/kinect_head/depth_registered/quater/throttled/points /kinect_head/depth_registered/quater/points" />

  <!-- k4a point cloud -->
  <group ns="k4a">
    <!-- Start nodelet manager -->
    <include file="$(find rgbd_launch)/launch/includes/manager.launch.xml">
      <arg name="name" value="$(arg manager)" />
      <arg name="num_worker_threads"  value="$(arg num_worker_threads)" />
    </include>

    <!-- half point cloud -->
    <!-- resize for point cloud -->
    <node name="resize_rgb"
          pkg="nodelet" type="nodelet"
          args="load image_proc/resize $(arg manager)" >
      <param name="scale_height" value="0.5" />
      <param name="scale_width" value="0.5" />
      <remap from="image" to="rgb/image_rect_color" />
      <remap from="camera_info" to="rgb/camera_info" />
      <remap from="~image" to="rgb_half/image_rect_color" />
      <remap from="~camera_info" to="rgb_half/camera_info" />
    </node>

    <!-- half point cloud -->
    <!-- resize for point cloud -->
    <node name="resize_depth_to_rgb_half"
          pkg="nodelet" type="nodelet"
          args="load image_proc/resize $(arg manager)" >
      <param name="interpolation" value="0" />
      <param name="scale_height" value="0.5" />
      <param name="scale_width" value="0.5" />
      <remap from="image" to="depth_to_rgb/image_raw" />
      <remap from="camera_info" to="depth_to_rgb/camera_info" />
      <remap from="~image" to="depth_to_rgb_half/image_raw" />
      <remap from="~camera_info" to="depth_to_rgb_half/camera_info" />
    </node>

    <!-- half point cloud -->
    <!-- resize for point cloud -->
    <node name="resize_depth_half"
          pkg="nodelet" type="nodelet"
          args="load image_proc/resize $(arg manager)" >
      <param name="interpolation" value="0" />
      <param name="scale_height" value="0.5" />
      <param name="scale_width" value="0.5" />
      <remap from="image" to="depth/image_rect_raw" />
      <remap from="camera_info" to="depth/camera_info" />
      <remap from="~image" to="depth_half/image_rect_raw" />
      <remap from="~camera_info" to="depth_half/camera_info" />
    </node>

    <!-- half point cloud -->
    <!-- Depth-to-RGB registration and processing -->
    <include if="$(arg depth_registered_processing)"
             file="$(find rgbd_launch)/launch/includes/depth_registered.launch.xml">
      <arg name="manager"                   value="$(arg manager)" />
      <arg name="rgb"                       value="rgb_half" />
      <arg name="depth"                     value="depth_half" />
      <arg name="depth_registered"          value="depth_to_rgb_half" />
      <arg name="depth_registered_filtered" value="depth_to_rgb_half" />
      <arg name="respawn"                   value="$(arg respawn)" />
      <arg name="sw_registered_processing"  value="$(arg sw_registered_processing)" />
      <arg name="hw_registered_processing"  value="$(arg hw_registered_processing)" />
      <!-- <arg name="queue_size"                value="$(arg queue_size)" /> -->
    </include>
  </group>

  <!-- rosbag player -->
  <node pkg="rosbag" type="play" name="rosbag_play"
        args="$(arg rosbag) $(arg loop_flag) --clock" output="screen" />
  <!-- <node pkg="rosbag" type="play" name="rosbag_play" -->
  <!--       args="$(arg rosbag) $(arg loop_flag) -r 5 -\-clock" output="screen" /> -->

  <node pkg="rviz" type="rviz" name="$(anon rviz)" if="$(arg gui)"
        args="-d $(find jsk_pr2_startup)/config/jsk_startup.rviz" />
</launch>
