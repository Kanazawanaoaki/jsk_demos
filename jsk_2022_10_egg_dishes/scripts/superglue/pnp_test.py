import cv2
import numpy as np

# 2D画像上の対応点と3D空間上の対応点
# image_points = np.array([(378, 328), (277, 390), (391, 325), (487, 409), (313, 444), (353, 365), (473, 363), (193, 410), (338, 431), (209, 410)], dtype=np.float32)
# image_points = np.array([[450, 55], [319, 138], [469, 51], [575, 157], [368, 200], [417, 104], [571, 100], [217, 159], [399, 183], [236, 159]], dtype=np.float32)
image_points = np.array([[373.0, 93.0], [355.0, 60.0], [124.0, 183.0], [374.0, 57.0], [321.0, 108.0], [491.0, 44.0], [430.0, 63.0], [338.0, 78.0], [429.0, 180.0], [330.0, 201.0]], dtype=np.float32)

# object_points = np.array([[0.3758946657180786, 0.568661093711853, 3.373413562774658],
#                           [-0.24664224684238434, 0.8734037280082703, 3.046757221221924],
#                           [0.45069587230682373, 0.5389440059661865, 3.309305429458618],
#                           [0.9633426070213318, 0.9748451709747314, 3.0194320678710938],
#                           [-0.03465843200683594, 1.0904076099395752, 2.799334764480591],
#                           [0.19441212713718414, 0.7283200621604919, 3.046757221221924],
#                           [0.8601945042610168, 0.6920783519744873, 2.942033290863037],
#                           [-0.7275393605232239, 0.9805964827537537, 3.0194320678710938],
#                           [0.1002548560500145, 1.0377732515335083, 2.8450703620910645],
#                           [-0.641269862651825, 0.9894706606864929, 3.046757221221924]], dtype=np.float32)
object_points = np.array([[0.44595521688461304, 0.6585960984230042, 3.10101318359375], [0.3964253067970276, 0.5733423829078674, 3.440054416656494], [-0.6478460431098938, 1.0157585144042969, 2.799334764480591], [0.4696061909198761, 0.5389440059661865, 3.309305429458618], [0.2099224179983139, 0.7217880487442017, 3.0194320678710938], [1.0296183824539185, 0.4545162618160248, 3.246544599533081], [0.699942946434021, 0.5227422118186951, 3.10101318359375], [0.292381227016449, 0.5936225056648254, 3.10101318359375], [0.7191553711891174, 1.0167368650436401, 2.8931539058685303], [0.26985564827919006, 1.1751776933670044, 3.046757221221924]]
, dtype=np.float32)

# カメラ行列（カメラキャリブレーション結果から）
# camera_matrix = np.array([[1217.935302734375, 0.0, 1279.5836181640625],
#                           [0.0, 1217.711669921875, 738.4121704101562],
#                           [0.0, 0.0, 1.0]], dtype=float)
camera_matrix = np.array([[525.0, 0.0, 319.5],
                          [0.0, 525.0, 239.5],
                          [0.0, 0.0, 1.0]], dtype=float)

# 歪み係数（カメラキャリブレーション結果から）
dist_coeffs = np.array([0, 0, 0, 0, 0])

# PnP法で外部パラメータ（回転行列と平行移動ベクトル）を計算
retval, rvec, tvec = cv2.solvePnP(object_points, image_points, camera_matrix, dist_coeffs)

# 回転ベクトルを回転行列に変換
rotation_matrix, _ = cv2.Rodrigues(rvec)

print("回転行列:")
print(rotation_matrix)
print("平行移動ベクトル:")
print(tvec)
